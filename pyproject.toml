[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8"]
build-backend = "setuptools.build_meta"

[project]
name = "ghe_transcribe"
description = "A tool to transcribe audio files with speaker diarization using Faster Whisper and Pyannote"
readme = "README.md"
requires-python = ">=3.10,<3.13"
license = "MIT"
authors = [
    {name = "Nicolo' Massari", email = "nmassari@ethz.ch"},
]
maintainers = [
    {name = "Nicolo' Massari", email = "nmassari@ethz.ch"},
]
keywords = ["transcription", "speech-to-text", "speaker-diarization", "whisper", "pyannote"]
classifiers = [
    "Development Status :: 4 - Beta",
    # "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Sound/Audio :: Speech",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dynamic = ["version"]
dependencies = [
    "aiohappyeyeballs==2.6.1",
    "aiohttp==3.13.0",
    "aiosignal==1.4.0",
    "alembic==1.17.0",
    "antlr4-python3-runtime==4.9.3",
    "appnope==0.1.4",
    "asteroid-filterbanks==0.4.0",
    "asttokens==3.0.0",
    "async-timeout==5.0.1",
    "attrs==25.4.0",
    "av==16.0.1",
    "certifi==2025.10.5",
    "cffi==2.0.0",
    "charset-normalizer==3.4.4",
    "click==8.3.0",
    "coloredlogs==15.0.1",
    "colorlog==6.9.0",
    "comm==0.2.3",
    "contourpy==1.3.2",
    "ctranslate2==4.6.0",
    "cycler==0.12.1",
    "debugpy==1.8.17",
    "decorator==5.2.1",
    "docopt==0.6.2",
    "einops==0.8.1",
    "exceptiongroup==1.3.0",
    "executing==2.2.1",
    "faster-whisper==1.2.0",
    "filelock==3.20.0",
    "flatbuffers==25.9.23",
    "fonttools==4.60.1",
    "frozenlist==1.8.0",
    "fsspec[http]==2025.9.0",
    "hf-xet==1.1.10",
    "huggingface-hub==0.35.3",
    "humanfriendly==10.0",
    "hyperpyyaml==1.2.2",
    "idna==3.11",
    "ipykernel==7.0.1",
    "ipython==8.37.0",
    "ipywidgets==8.1.7",
    "jedi==0.19.2",
    "jinja2==3.1.6",
    "joblib==1.5.2",
    "julius==0.2.7",
    "jupyter-client==8.6.3",
    "jupyter-core==5.9.0",
    "jupyterlab-widgets==3.0.15",
    "kiwisolver==1.4.9",
    "lightning==2.5.5",
    "lightning-utilities==0.15.2",
    "mako==1.3.10",
    "markdown-it-py==4.0.0",
    "markupsafe==3.0.3",
    "matplotlib==3.10.7",
    "matplotlib-inline==0.1.7",
    "mdurl==0.1.2",
    "mpmath==1.3.0",
    "multidict==6.7.0",
    "nest-asyncio==1.6.0",
    "networkx==3.4.2",
    "numpy==1.26.4",
    "omegaconf==2.3.0",
    "onnxruntime==1.23.1",
    "optuna==4.5.0",
    "packaging==25.0",
    "pandas==2.3.3",
    "parso==0.8.5",
    "pexpect==4.9.0",
    "pillow==12.0.0",
    "platformdirs==4.5.0",
    "primepy==1.3",
    "prompt-toolkit==3.0.52",
    "propcache==0.4.1",
    "protobuf==6.33.0",
    "psutil==7.1.0",
    "ptyprocess==0.7.0",
    "pure-eval==0.2.3",
    "pyannote-audio==3.3.1",
    "pyannote-core==5.0.0",
    "pyannote-database==5.1.3",
    "pyannote-metrics==3.2.1",
    "pyannote-pipeline==3.0.1",
    "pycparser==2.23",
    "pygments==2.19.2",
    "pyparsing==3.2.5",
    "python-dateutil==2.9.0.post0",
    "pytorch-lightning==2.5.5",
    "pytorch-metric-learning==2.9.0",
    "pytz==2025.2",
    "pyyaml==6.0.3",
    "pyzmq==27.1.0",
    "requests==2.32.5",
    "rich==14.2.0",
    "ruamel-yaml==0.18.15",
    "ruamel-yaml-clib==0.2.14",
    "scikit-learn==1.7.2",
    "scipy==1.15.3",
    "semver==3.0.4",
    "sentencepiece==0.2.1",
    "shellingham==1.5.4",
    "six==1.17.0",
    "sortedcontainers==2.4.0",
    "soundfile==0.13.1",
    "speechbrain==1.0.3",
    "sqlalchemy==2.0.44",
    "stack-data==0.6.3",
    "sympy==1.13.1",
    "tabulate==0.9.0",
    "tensorboardx==2.6.4",
    "threadpoolctl==3.6.0",
    "tokenizers==0.22.1",
    "tomli==2.3.0",
    "torch==2.5.1",
    "torch-audiomentations==0.12.0",
    "torch-pitch-shift==1.2.5",
    "torchaudio==2.5.1",
    "torchmetrics==1.8.2",
    "tornado==6.5.2",
    "tqdm==4.67.1",
    "traitlets==5.14.3",
    "typer==0.19.2",
    "typing-extensions==4.15.0",
    "tzdata==2025.2",
    "urllib3==2.5.0",
    "wcwidth==0.2.14",
    "widgetsnbextension==4.0.14",
    "yarl==1.22.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pip-tools",
    "uv",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
]
all = [
    "ghe_transcribe[dev]",
]

[project.scripts]
transcribe = "ghe_transcribe.core:app"

[project.urls]
"Homepage" = "https://github.com/Global-Health-Engineering/ghe_transcribe"
"Bug Reports" = "https://github.com/Global-Health-Engineering/ghe_transcribe/issues"
"Source" = "https://github.com/Global-Health-Engineering/ghe_transcribe"
"Documentation" = "https://github.com/Global-Health-Engineering/ghe_transcribe#readme"

[tool.setuptools]
packages = ["ghe_transcribe"]
package-dir = {"" = "src"}

[tool.setuptools_scm]
write_to = "src/ghe_transcribe/_version.py"
version_scheme = "release-branch-semver"
local_scheme = "node-and-date"

[tool.ruff]
line-length = 88
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "B905", # zip without explicit strict parameter
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B018"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q"
testpaths = [
    "tests",
]

# redundant pytest options
python_files = [
    "test_*.py",
    "*_test.py",
]
python_classes = [
    "Test*",
]
python_functions = [
    "test_*",
]
