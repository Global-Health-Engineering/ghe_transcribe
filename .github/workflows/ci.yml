name: CI

on:
  push:
    branches: [main, dev]
    paths:
      - 'src/ghe_transcribe/**'
      - '!src/ghe_transcribe/_version.py'
      - 'tests/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/ci.yml'
  pull_request:
    branches: [main]
    paths:
      - 'src/ghe_transcribe/**'
      - '!src/ghe_transcribe/_version.py'
      - 'tests/**'
      - 'pyproject.toml'
      - 'uv.lock'
      - '.github/workflows/ci.yml'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: Test Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        os: [ubuntu-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          enable-cache: true
          cache-dependency-glob: "uv.lock"

      - name: Install dependencies
        run: uv sync --extra dev --locked

      - name: Check code formatting
        run: uv run ruff format --check src/ tests/
        continue-on-error: true

      - name: Run linting
        run: uv run ruff check src/ tests/ --output-format=github
        continue-on-error: true

      - name: Run type checking
        run: uv run mypy src/
        continue-on-error: true

      - name: Run tests
        run: uv run python -m pytest tests/ -v --tb=short --junitxml=pytest.xml

      - name: Upload test results
        uses: mikepenz/action-junit-report@v4
        if: always()
        with:
          report_paths: pytest.xml
          check_name: Test Results (Python ${{ matrix.python-version }}, ${{ matrix.os }})

  security:
    name: Security scan
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'